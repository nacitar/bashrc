#!/bin/bash
set -eu
ns_python_version() {
    local binary="${1}"
    if command -v "${binary}" &>/dev/null; then
        "${binary}" -c 'import sys; print(sys.version)' 2>/dev/null
    else
        return 1
    fi
}
ns_get_system_python() {
    if [[ -n ${VIRTUAL_ENV:-} ]]; then
        # remove the the venv from PATH
        local NEW_PATH=":${PATH}:"
        NEW_PATH=${NEW_PATH//:${VIRTUAL_ENV}\/bin:/:}
        NEW_PATH=${NEW_PATH#:}
        local PATH=${NEW_PATH%:}
    fi
    for python in python3 python ''; do
        if [[ -n ${python} ]]; then
            python=$(type -P "${python}" 2>/dev/null)
            [[ -n ${python} ]] && break
        fi
    done
    echo "${python}"
}

pipx_reinstall_check=''
if command -v pipx &>/dev/null; then
    python="$(ns_get_system_python)"
    if [[ -n "${python}" ]]; then
        python_version="$(ns_python_version "${python}")"
        pipx_reinstall_check=1
    fi
fi

if command -v pacman &>/dev/null; then
    sudo pacman -Sy --noconfirm --needed archlinux-keyring
    if command -v yay &>/dev/null; then
        if [ "$(id -u)" -eq 0 ]; then
            >&2 echo "ERROR: ${0} must NOT be ran with root privileges on" \
                'systems with the AUR helper "yay".'
            exit 1
        fi
        yay --noconfirm --sudoloop -Su
    fi
    readarray -t orphans < <(pacman -Qtdq || true)
    if (( ${#orphans[@]} )); then
        sudo pacman -Rns --noconfirm "${orphans[@]}"
    fi
    # NOTE: paccache is suggested to be setup as a pacman hook
    # https://averagelinuxuser.com/clean-arch-linux/#1-clean-package-cache
    if command -v pacdiff &>/dev/null; then
        if [[ -z ${DIFFPROG} ]]; then
            if command -v nvim &>/dev/null; then
                DIFFPROG="nvim -d"
            else
                DIFFPROG="vim -d"
            fi
        fi
        sudo -- /bin/bash -ce "DIFFPROG=$(printf %q "${DIFFPROG}") pacdiff"
    else
        >&2 echo "WARNING: pacman-contrib not installed; cannot run pacdiff!"
    fi
elif command -v apt-get &>/dev/null; then
    sudo -- /bin/bash -ce '
        apt-get update -y
        apt-get dist-upgrade -y
        '
elif command -v dnf &>/dev/null; then
    sudo dnf upgrade --refresh -y
elif command -v yum &>/dev/null; then
    sudo -- /bin/bash -ce '
        yum clean all
        yum update -y
        '
elif command -v apk &>/dev/null; then
    sudo -- /bin/bash -ce '
        apk update
        apk upgrade
        '
elif command -v emerge &>/dev/null; then
    sudo -- /bin/bash -ce '
        emerge --sync
        command -v eix-update &>/dev/null && eix-update
        emerge -vDNu world
        '
else
    >&2 echo "ERROR: couldn't identify package manager."
    exit 1
fi

if [[ -n "${pipx_reinstall_check}" ]]; then
    if [[ ${python_version} != "$(ns_python_version "${python}")" ]]; then
        pipx reinstall-all
    fi
    pipx upgrade-all
fi
